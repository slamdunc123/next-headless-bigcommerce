{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/duncan/Development/Repos/next-headless-bigcommerce/pages/products/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\n\nvar Product = function Product(_ref, params) {\n  var productImages = _ref.productImages;\n  console.log(productImages.length, window.document.url);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, productImages.length > 0 ? productImages.map(function (productImage) {\n    return __jsx(\"div\", {\n      key: productImage.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, productImage.product_id, \" - \", productImage.id, \" - \", __jsx(\"img\", {\n      src: productImage.url_tiny,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), \" \");\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"No images for product \"));\n}; // call api to get sinlge product data\n\n\nProduct.getInitialProps = function _callee(context) {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('id = ', context.query.id);\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/api/products/\".concat(context.query.id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            productImages: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Product;","map":{"version":3,"sources":["/Users/duncan/Development/Repos/next-headless-bigcommerce/pages/products/[id].js"],"names":["Product","params","productImages","console","log","length","window","document","url","map","productImage","id","product_id","url_tiny","getInitialProps","context","query","fetch","res","json","data"],"mappings":";;;;AAAA,OAAO,kBAAP;;AAEA,IAAMA,OAAO,GAAG,SAAVA,OAAU,OAAkBC,MAAlB,EAA6B;AAAA,MAA3BC,aAA2B,QAA3BA,aAA2B;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACG,MAA1B,EAAkCC,MAAM,CAACC,QAAP,CAAgBC,GAAlD;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKN,aAAa,CAACG,MAAd,GAAuB,CAAxB,GACEH,aAAa,CAACO,GAAd,CAAkB,UAAAC,YAAY;AAAA,WAChC;AAAK,MAAA,GAAG,EAAEA,YAAY,CAACC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,YAAY,CAACE,UAAzC,SAAwDF,YAAY,CAACC,EAArE,SAA2E;AAAK,MAAA,GAAG,EAAED,YAAY,CAACG,QAAvB;AAAiC,MAAA,GAAG,EAAC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3E,MADgC;AAAA,GAA9B,CADF,GAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BALN,CADF;AAWD,CAdD,C,CAgBA;;;AAEAb,OAAO,CAACc,eAAR,GAA0B,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBZ,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBW,OAAO,CAACC,KAAR,CAAcL,EAAnC;AADwB;AAAA,2CAENM,KAAK,8CAAuCF,OAAO,CAACC,KAAR,CAAcL,EAArD,EAFC;;AAAA;AAElBO,UAAAA,GAFkB;AAAA;AAAA,2CAGLA,GAAG,CAACC,IAAJ,EAHK;;AAAA;AAGlBC,UAAAA,IAHkB;AAAA,2CAIjB;AACLlB,YAAAA,aAAa,EAAEkB;AADV,WAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAUA,eAAepB,OAAf","sourcesContent":["import 'isomorphic-fetch';\n\nconst Product = ({productImages}, params) => {\n  console.log(productImages.length, window.document.url)\n\n  return (\n    <div>\n      {\n        (productImages.length > 0)\n        ? productImages.map(productImage => \n        <div key={productImage.id}>{productImage.product_id} - {productImage.id} - <img src={productImage.url_tiny} alt=\"\"/> </div>) \n        : <div>No images for product </div>\n      }\n      \n    </div>\n  )\n}\n\n// call api to get sinlge product data\n\nProduct.getInitialProps = async function(context){\n  console.log('id = ', context.query.id)\n  const res = await fetch(`http://localhost:3000/api/products/${context.query.id}`)\n  const data = await res.json()\n  return {\n    productImages: data\n  }\n  \n}\n\nexport default Product\n"]},"metadata":{},"sourceType":"module"}