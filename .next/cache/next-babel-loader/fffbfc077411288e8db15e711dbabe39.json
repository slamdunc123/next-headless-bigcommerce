{"ast":null,"code":"let products = [{\n  id: '387',\n  name: 'test'\n}, {\n  id: '388',\n  name: 'test2'\n}]; // export default (req, res) => {\n//   res.status(200).json({product: req.query.id, products})\n// }\n// export default (req, res) => {\n//   const {\n//     query: { id },\n//   } = req\n//   // res.json(`Product: ${id}`)\n//   res.status(200).json({products: req.query.id, products})\n// }\n\nexport default (({\n  query: {\n    id\n  }\n}, res) => {\n  // let getProductData = async () => {\n  //     let res = await fetch(`https://api.bigcommerce.com/stores/5xucklva8y/v3/catalog/products/${_id}`,\n  //     {\n  //       method: \"GET\",\n  //         headers: {\n  //           \"X-Auth-Client\": '4berj6c79aulu1fiqgeq3kupga0oe01',\n  //           \"X-Auth-Token\": '5xe20syvcw3l4oibycyeoj85ezsvaio'\n  //         }\n  //     }\n  //     )\n  //     const data = await res.json()\n  //       return {\n  //         products: data.data\n  //       }\n  //     }\n  //     getProductData()\n  const filtered = products.filter(product => product.id === id); // Product with id exists\n\n  if (filtered.length > 0) {\n    res.status(200).json(filtered[0]);\n  } else {\n    res.status(404).json({\n      message: `User with id: ${id} not found.`\n    });\n  }\n});","map":{"version":3,"sources":["/Users/duncan/Development/Repos/next-learn-demo/7.2-api-routes/pages/api/products2/[id].js"],"names":["products","id","name","query","res","filtered","filter","product","length","status","json","message"],"mappings":"AAEA,IAAIA,QAAQ,GAAG,CACb;AACEC,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADa,EAKb;AACED,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALa,CAAf,C,CAYA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,gBAAe,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAEF,IAAAA;AAAF;AAAT,CAAD,EAAoBG,GAApB,KAA4B;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAGE,QAAMC,QAAQ,GAAGL,QAAQ,CAACM,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACN,EAAR,KAAeA,EAA1C,CAAjB,CAvBuC,CAyBzC;;AACA,MAAII,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACvBJ,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,QAAQ,CAAC,CAAD,CAA7B;AACD,GAFD,MAEO;AACLD,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAG,iBAAgBV,EAAG;AAA/B,KAArB;AACD;AACF,CA/BD","sourcesContent":["\n\nlet products = [\n  {\n    id: '387',\n    name: 'test'\n  },\n  {\n    id: '388',\n    name: 'test2'\n  }\n\n]\n\n// export default (req, res) => {\n//   res.status(200).json({product: req.query.id, products})\n// }\n\n// export default (req, res) => {\n//   const {\n//     query: { id },\n//   } = req\n\n//   // res.json(`Product: ${id}`)\n//   res.status(200).json({products: req.query.id, products})\n// }\n\nexport default ({ query: { id } }, res) => {\n\n  // let getProductData = async () => {\n  //     let res = await fetch(`https://api.bigcommerce.com/stores/5xucklva8y/v3/catalog/products/${_id}`,\n  //     {\n  //       method: \"GET\",\n  //         headers: {\n  //           \"X-Auth-Client\": '4berj6c79aulu1fiqgeq3kupga0oe01',\n  //           \"X-Auth-Token\": '5xe20syvcw3l4oibycyeoj85ezsvaio'\n  //         }\n  //     }\n  //     )\n  //     const data = await res.json()\n     \n  //       return {\n  //         products: data.data\n  //       }\n        \n  //     }\n\n  //     getProductData()\n  \n  \n    const filtered = products.filter(product => product.id === id)\n\n  // Product with id exists\n  if (filtered.length > 0) {\n    res.status(200).json(filtered[0])\n  } else {\n    res.status(404).json({ message: `User with id: ${id} not found.` })\n  }\n}"]},"metadata":{},"sourceType":"module"}