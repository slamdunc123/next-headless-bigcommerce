{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/duncan/Development/Repos/next-headless-bigcommerce/pages/products/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\n\nvar Product = function Product(_ref) {\n  var productImages = _ref.productImages;\n  console.log(product);\n  var product_id = productImages.product_id,\n      id = productImages.id,\n      url_tiny = productImages.url_tiny;\n  console.log(id);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, productImages.map(function (productImage) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, productImage.product_id, \" - \", productImage.id, \" - \", __jsx(\"img\", {\n      src: productImage.url_tiny,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), \" \");\n  }));\n}; // call api to get sinlge product data\n\n\nProduct.getInitialProps = function _callee(context) {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('id = ', context.query.id);\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/api/products/\".concat(context.query.id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            productImages: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Product;","map":{"version":3,"sources":["/Users/duncan/Development/Repos/next-headless-bigcommerce/pages/products/[id].js"],"names":["Product","productImages","console","log","product","product_id","id","url_tiny","map","productImage","getInitialProps","context","query","fetch","res","json","data"],"mappings":";;;;AAAA,OAAO,kBAAP;;AAEA,IAAMA,OAAO,GAAG,SAAVA,OAAU,OAAqB;AAAA,MAAnBC,aAAmB,QAAnBA,aAAmB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AADmC,MAE3BC,UAF2B,GAEEJ,aAFF,CAE3BI,UAF2B;AAAA,MAEfC,EAFe,GAEEL,aAFF,CAEfK,EAFe;AAAA,MAEXC,QAFW,GAEEN,aAFF,CAEXM,QAFW;AAGnCL,EAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIL,aAAa,CAACO,GAAd,CAAkB,UAAAC,YAAY;AAAA,WAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,YAAY,CAACJ,UAAnB,SAAkCI,YAAY,CAACH,EAA/C,SAAqD;AAAK,MAAA,GAAG,EAAEG,YAAY,CAACF,QAAvB;AAAiC,MAAA,GAAG,EAAC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArD,MAAJ;AAAA,GAA9B,CAFJ,CADF;AAQD,CAbD,C,CAeA;;;AAEAP,OAAO,CAACU,eAAR,GAA0B,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBT,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,OAAO,CAACC,KAAR,CAAcN,EAAnC;AADwB;AAAA,2CAENO,KAAK,8CAAuCF,OAAO,CAACC,KAAR,CAAcN,EAArD,EAFC;;AAAA;AAElBQ,UAAAA,GAFkB;AAAA;AAAA,2CAGLA,GAAG,CAACC,IAAJ,EAHK;;AAAA;AAGlBC,UAAAA,IAHkB;AAAA,2CAIjB;AACLf,YAAAA,aAAa,EAAEe;AADV,WAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAUA,eAAehB,OAAf","sourcesContent":["import 'isomorphic-fetch';\n\nconst Product = ({productImages}) => {\n  console.log(product)\n  const { product_id, id, url_tiny } = productImages\n  console.log(id)\n\n  return (\n    <div>\n      {\n        productImages.map(productImage => <div>{productImage.product_id} - {productImage.id} - <img src={productImage.url_tiny} alt=\"\"/> </div>)\n      }\n      \n    </div>\n  )\n}\n\n// call api to get sinlge product data\n\nProduct.getInitialProps = async function(context){\n  console.log('id = ', context.query.id)\n  const res = await fetch(`http://localhost:3000/api/products/${context.query.id}`)\n  const data = await res.json()\n  return {\n    productImages: data\n  }\n  \n}\n\nexport default Product\n"]},"metadata":{},"sourceType":"module"}