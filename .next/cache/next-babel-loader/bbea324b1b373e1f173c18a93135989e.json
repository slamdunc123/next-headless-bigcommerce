{"ast":null,"code":"import axios from 'axios';\nexport default (async ({\n  query: {\n    id\n  }\n}, res) => {\n  let products = [];\n  await axios({\n    method: \"GET\",\n    url: `https://api.bigcommerce.com/stores/5xucklva8y/v3/catalog/products/${id}`,\n    headers: {\n      \"X-Auth-Client\": '4berj6c79aulu1fiqgeq3kupga0oe01',\n      \"X-Auth-Token\": '5xe20syvcw3l4oibycyeoj85ezsvaio'\n    }\n  }).then(response => products = response.data.data);\n  const filtered = products.filter(product => product.id == id);\n\n  if (filtered.length > 0) {\n    res.status(200).json(filtered[0]);\n  } else {\n    res.status(404).json({\n      message: `User with id: ${id} not found.`\n    });\n  }\n});","map":{"version":3,"sources":["/Users/duncan/Development/Repos/next-headless-bigcommerce/pages/api/products/[id].js"],"names":["axios","query","id","res","products","method","url","headers","then","response","data","filtered","filter","product","length","status","json","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,gBAAe,OAAO;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAAT,CAAP,EAA0BC,GAA1B,KAAkC;AAE/C,MAAIC,QAAQ,GAAG,EAAf;AAEA,QAAMJ,KAAK,CACP;AACEK,IAAAA,MAAM,EAAE,KADV;AAEEC,IAAAA,GAAG,EAAG,qEAAoEJ,EAAG,EAF/E;AAGIK,IAAAA,OAAO,EAAE;AACP,uBAAiB,iCADV;AAEP,sBAAgB;AAFT;AAHb,GADO,CAAL,CAWHC,IAXG,CAWEC,QAAQ,IAAIL,QAAQ,GAAGK,QAAQ,CAACC,IAAT,CAAcA,IAXvC,CAAN;AAaE,QAAMC,QAAQ,GAAGP,QAAQ,CAACQ,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACX,EAAR,IAAcA,EAAzC,CAAjB;;AAEA,MAAIS,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACvBX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,QAAQ,CAAC,CAAD,CAA7B;AACD,GAFD,MAEO;AACLR,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAG,iBAAgBf,EAAG;AAA/B,KAArB;AACD;AACJ,CAxBD","sourcesContent":["import axios from 'axios'; \n\nexport default async ({ query: { id } }, res) => {\n\n  let products = [];\n\n  await axios(\n      {\n        method: \"GET\",\n        url: `https://api.bigcommerce.com/stores/5xucklva8y/v3/catalog/products/${id}`,\n          headers: {\n            \"X-Auth-Client\": '4berj6c79aulu1fiqgeq3kupga0oe01',\n            \"X-Auth-Token\": '5xe20syvcw3l4oibycyeoj85ezsvaio'\n          }\n      }\n    )\n\n    .then(response => products = response.data.data)\n     \n    const filtered = products.filter(product => product.id == id)\n   \n    if (filtered.length > 0) {\n      res.status(200).json(filtered[0])\n    } else {\n      res.status(404).json({ message: `User with id: ${id} not found.` })\n    }\n}"]},"metadata":{},"sourceType":"module"}