{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nReact.useEffect(() => {\n  let products = fetch(`https://api.bigcommerce.com/stores/5xucklva8y/v3/catalog/products`, {\n    method: \"GET\",\n    headers: {\n      \"X-Auth-Client\": '4berj6c79aulu1fiqgeq3kupga0oe01',\n      \"X-Auth-Token\": '5xe20syvcw3l4oibycyeoj85ezsvaio'\n    }\n  }).then(response => response.json()).then(data => {\n    return products = data.data;\n  });\n}, []); // export default (req, res) => {\n//   res.status(200).json({products: req.query.id, products})\n// }\n// export default (req, res) => {\n//   const {\n//     query: { id },\n//   } = req\n//   // res.json(`Product: ${id}`)\n//   res.status(200).json({products: req.query.id, products})\n// }\n\nexport default (({\n  query: {\n    id\n  }\n}, res) => {\n  const filtered = products.filter(product => product.id === id); // Product with id exists\n\n  if (filtered.length > 0) {\n    res.status(200).json(filtered[0]);\n  } else {\n    res.status(404).json({\n      message: `User with id: ${id} not found.`\n    });\n  }\n});","map":{"version":3,"sources":["/Users/duncan/Development/Repos/next-learn-demo/7.2-api-routes/pages/api/products/[id].js"],"names":["fetch","React","useEffect","products","method","headers","then","response","json","data","query","id","res","filtered","filter","product","length","status","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAEAC,KAAK,CAACC,SAAN,CAAgB,MAAM;AAAC,MAAIC,QAAQ,GAAGH,KAAK,CAAE,mEAAF,EAC3C;AACEI,IAAAA,MAAM,EAAE,KADV;AAEIC,IAAAA,OAAO,EAAE;AACP,uBAAiB,iCADV;AAEP,sBAAgB;AAFT;AAFb,GAD2C,CAAL,CASrCC,IATqC,CAShCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAToB,EAUrCF,IAVqC,CAUhCG,IAAI,IAAI;AACZ,WAAON,QAAQ,GAAGM,IAAI,CAACA,IAAvB;AACD,GAZqC,CAAf;AActB,CAdD,EAcG,EAdH,E,CAgBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,gBAAe,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAAT,CAAD,EAAoBC,GAApB,KAA4B;AACzC,QAAMC,QAAQ,GAAGV,QAAQ,CAACW,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACJ,EAAR,KAAeA,EAA1C,CAAjB,CADyC,CAGzC;;AACA,MAAIE,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACvBJ,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqBK,QAAQ,CAAC,CAAD,CAA7B;AACD,GAFD,MAEO;AACLD,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AAAEU,MAAAA,OAAO,EAAG,iBAAgBP,EAAG;AAA/B,KAArB;AACD;AACF,CATD","sourcesContent":["import fetch from 'isomorphic-fetch'\n\nReact.useEffect(() => {let products = fetch(`https://api.bigcommerce.com/stores/5xucklva8y/v3/catalog/products`,\n{\n  method: \"GET\",\n    headers: {\n      \"X-Auth-Client\": '4berj6c79aulu1fiqgeq3kupga0oe01',\n      \"X-Auth-Token\": '5xe20syvcw3l4oibycyeoj85ezsvaio'\n    }\n}\n)\n.then(response => response.json())\n.then(data => {\n  return products = data.data\n}\n)\n}, [])\n\n// export default (req, res) => {\n//   res.status(200).json({products: req.query.id, products})\n// }\n\n// export default (req, res) => {\n//   const {\n//     query: { id },\n//   } = req\n\n//   // res.json(`Product: ${id}`)\n//   res.status(200).json({products: req.query.id, products})\n// }\n\nexport default ({ query: { id } }, res) => {\n  const filtered = products.filter(product => product.id === id)\n\n  // Product with id exists\n  if (filtered.length > 0) {\n    res.status(200).json(filtered[0])\n  } else {\n    res.status(404).json({ message: `User with id: ${id} not found.` })\n  }\n}"]},"metadata":{},"sourceType":"module"}