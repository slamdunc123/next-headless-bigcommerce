{"ast":null,"code":"import fetch from 'isomorphic-fetch'; // let products = [\n//   {\n//     id: '387',\n//     name: 'test'\n//   },\n//   {\n//     id: '388',\n//     name: 'test2'\n//   }\n// ]\n// export default (req, res) => {\n//   res.status(200).json({product: req.query.id, products})\n// }\n// export default (req, res) => {\n//   const {\n//     query: { id },\n//   } = req\n//   // res.json(`Product: ${id}`)\n//   res.status(200).json({products: req.query.id, products})\n// }\n\nexport default (({\n  query: {\n    id\n  }\n}, res) => {\n  let getProductData = async () => {\n    let res = await fetch(`https://api.bigcommerce.com/stores/5xucklva8y/v3/catalog/products/${_id}`, {\n      method: \"GET\",\n      headers: {\n        \"X-Auth-Client\": '4berj6c79aulu1fiqgeq3kupga0oe01',\n        \"X-Auth-Token\": '5xe20syvcw3l4oibycyeoj85ezsvaio'\n      }\n    });\n    const data = await res.json();\n    return {\n      products: data.data\n    };\n  };\n\n  getProductData();\n  const filtered = products.filter(product => product.id === id); // Product with id exists\n\n  if (filtered.length > 0) {\n    res.status(200).json(filtered[0]);\n  } else {\n    res.status(404).json({\n      message: `User with id: ${id} not found.`\n    });\n  }\n});","map":{"version":3,"sources":["/Users/duncan/Development/Repos/next-learn-demo/7.2-api-routes/pages/api/products/[id].js"],"names":["fetch","query","id","res","getProductData","_id","method","headers","data","json","products","filtered","filter","product","length","status","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,gBAAe,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAAT,CAAD,EAAoBC,GAApB,KAA4B;AAEzC,MAAIC,cAAc,GAAG,YAAY;AAC7B,QAAID,GAAG,GAAG,MAAMH,KAAK,CAAE,qEAAoEK,GAAI,EAA1E,EACrB;AACEC,MAAAA,MAAM,EAAE,KADV;AAEIC,MAAAA,OAAO,EAAE;AACP,yBAAiB,iCADV;AAEP,wBAAgB;AAFT;AAFb,KADqB,CAArB;AASA,UAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;AAEE,WAAO;AACLC,MAAAA,QAAQ,EAAEF,IAAI,CAACA;AADV,KAAP;AAID,GAhBL;;AAkBIJ,EAAAA,cAAc;AAGhB,QAAMO,QAAQ,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACX,EAAR,KAAeA,EAA1C,CAAjB,CAvBuC,CAyBzC;;AACA,MAAIS,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACvBX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqBE,QAAQ,CAAC,CAAD,CAA7B;AACD,GAFD,MAEO;AACLR,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEO,MAAAA,OAAO,EAAG,iBAAgBd,EAAG;AAA/B,KAArB;AACD;AACF,CA/BD","sourcesContent":["import fetch from 'isomorphic-fetch'\n\n// let products = [\n//   {\n//     id: '387',\n//     name: 'test'\n//   },\n//   {\n//     id: '388',\n//     name: 'test2'\n//   }\n\n// ]\n\n// export default (req, res) => {\n//   res.status(200).json({product: req.query.id, products})\n// }\n\n// export default (req, res) => {\n//   const {\n//     query: { id },\n//   } = req\n\n//   // res.json(`Product: ${id}`)\n//   res.status(200).json({products: req.query.id, products})\n// }\n\nexport default ({ query: { id } }, res) => {\n\n  let getProductData = async () => {\n      let res = await fetch(`https://api.bigcommerce.com/stores/5xucklva8y/v3/catalog/products/${_id}`,\n      {\n        method: \"GET\",\n          headers: {\n            \"X-Auth-Client\": '4berj6c79aulu1fiqgeq3kupga0oe01',\n            \"X-Auth-Token\": '5xe20syvcw3l4oibycyeoj85ezsvaio'\n          }\n      }\n      )\n      const data = await res.json()\n     \n        return {\n          products: data.data\n        }\n        \n      }\n\n      getProductData()\n  \n  \n    const filtered = products.filter(product => product.id === id)\n\n  // Product with id exists\n  if (filtered.length > 0) {\n    res.status(200).json(filtered[0])\n  } else {\n    res.status(404).json({ message: `User with id: ${id} not found.` })\n  }\n}"]},"metadata":{},"sourceType":"module"}