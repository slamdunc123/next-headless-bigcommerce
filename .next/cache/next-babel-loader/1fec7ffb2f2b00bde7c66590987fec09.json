{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nconst [products, setProducts] = React.useState([]);\nReact.useEffect(() => {\n  let products = fetch('https://api.bigcommerce.com/stores/5xucklva8y/v3/catalog/products/387', {\n    method: \"GET\",\n    headers: {\n      \"X-Auth-Client\": '4berj6c79aulu1fiqgeq3kupga0oe01',\n      \"X-Auth-Token\": '5xe20syvcw3l4oibycyeoj85ezsvaio'\n    }\n  }).then(response => response.json()).then(data => {\n    return products = data.data;\n  });\n  setProducts(products);\n}, []);\nexport default ((req, res) => {\n  res.status(200).json(products);\n});","map":{"version":3,"sources":["/Users/duncan/Development/Repos/next-learn-demo/7.2-api-routes/pages/api/products.js"],"names":["fetch","products","setProducts","React","useState","useEffect","method","headers","then","response","json","data","req","res","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAEA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,KAAK,CAACC,QAAN,CAAe,EAAf,CAAhC;AAEAD,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpB,MAAIJ,QAAQ,GAAGD,KAAK,CAAC,uEAAD,EACpB;AACEM,IAAAA,MAAM,EAAE,KADV;AAEIC,IAAAA,OAAO,EAAE;AACP,uBAAiB,iCADV;AAEP,sBAAgB;AAFT;AAFb,GADoB,CAAL,CASdC,IATc,CASTC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATH,EAUdF,IAVc,CAUTG,IAAI,IAAI;AACZ,WAAOV,QAAQ,GAAGU,IAAI,CAACA,IAAvB;AAED,GAbc,CAAf;AAeAT,EAAAA,WAAW,CAACD,QAAD,CAAX;AAED,CAlBD,EAkBG,EAlBH;AAsBA,gBAAe,CAACW,GAAD,EAAMC,GAAN,KAAc;AAC3BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqBT,QAArB;AACD,CAFD","sourcesContent":["import fetch from 'isomorphic-fetch'\n\nconst [products, setProducts] = React.useState([])\n\nReact.useEffect(() => {\n  let products = fetch('https://api.bigcommerce.com/stores/5xucklva8y/v3/catalog/products/387',\n  {\n    method: \"GET\",\n      headers: {\n        \"X-Auth-Client\": '4berj6c79aulu1fiqgeq3kupga0oe01',\n        \"X-Auth-Token\": '5xe20syvcw3l4oibycyeoj85ezsvaio'\n      }\n  }\n )\n  .then(response => response.json())\n  .then(data => {\n    return products = data.data\n    \n  }\n  )\n  setProducts(products)\n\n}, [])\n\n\n\nexport default (req, res) => {\n  res.status(200).json(products)\n}"]},"metadata":{},"sourceType":"module"}